# Generated by Django 4.2.1 on 2023-07-22 19:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('year', models.CharField(max_length=4, verbose_name='year')),
                ('director', models.CharField(max_length=255, verbose_name='director')),
                ('rank', models.CharField(default='0', max_length=255, null=True, verbose_name='rank')),
                ('rating', models.FloatField(null=True, verbose_name='rating')),
                ('votes', models.BigIntegerField(null=True, verbose_name='votes')),
                ('runtime', models.CharField(max_length=15, null=True, verbose_name='runtime')),
                ('release_date', models.DateField(null=True, verbose_name='release_date')),
                ('poster_img', models.URLField(null=True, verbose_name='poster_img')),
                ('imdb_page', models.URLField(null=True, verbose_name='imdb_page')),
                ('audience_rating', models.CharField(max_length=4, null=True, verbose_name='audience_rating')),
                ('metascore', models.IntegerField(null=True, verbose_name='metascore')),
                ('genre_list', models.CharField(max_length=255, null=True, verbose_name='genre_list')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='description')),
                ('country_of_origin', models.CharField(max_length=10, null=True, verbose_name='country')),
                ('us_canada_gross', models.BigIntegerField(null=True, verbose_name='us_canada_gross')),
                ('worldwide_gross', models.BigIntegerField(null=True, verbose_name='world_gross')),
                ('oscar_nominations', models.IntegerField(null=True, verbose_name='oscar_nominations')),
                ('oscar_wins', models.IntegerField(null=True, verbose_name='oscar_wins')),
                ('cast_list', models.CharField(max_length=500, null=True, verbose_name='cast_list')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
